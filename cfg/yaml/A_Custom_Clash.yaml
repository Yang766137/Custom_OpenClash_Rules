# 必读！！！
# 注意规则在满足自己需求情况下，尽量做到精简，不要过度复杂，以免影响性能。
# 跑裸核用户请自行去掉下方控制面板模块的注释。
# 机场订阅
proxy-providers:
  provider1:
    url: "url"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连
    override: # 覆写节点加载时的一些配置项
      skip-cert-verify: true
      udp: true
      additional-prefix: "Gu | "
      #additional-prefix: "前缀 |"
      #additional-suffix: "| 后缀"

  provider2:
    url: "url"
    type: http
    #interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    override: # 覆写节点加载时的一些配置项
      skip-cert-verify: true
      udp: true
      additional-prefix: "XK | "
    proxy: 直连

  provider3:
    url: "url"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    override: # 覆写节点加载时的一些配置项
      skip-cert-verify: true
      udp: true
      additional-prefix: "Cat | "
    proxy: 直连

# 节点信息
proxies:
  - {name: 直连, type: direct}
  - {name: 拒绝, type: reject}

# 代理提供者模板 - 订阅源基础配置
#BaseProvider: &BaseProvider {type: http, interval: 86400, proxy: DIRECT, health-check: {enable: true, url: 'https://www.google.com/generate_204', interval: 300}, 
#filter: '^(?!.*(群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|教程|关注|更新|作者|加入|USE|USED|TOTAL|EXPIRE|EMAIL|Panel|Channel|Author))'}


 
# 出站策略，根据自己情况调整每个策略里分组排序，增删都可以，比如把美国自动放到第一个，比如删除香港故转，注意别漏掉表情逗号等。
# type: select, proxies: [🎯 全球直连, 🔯 新加坡故转, 🔯 香港故转, 🔯 日本故转, 🔯 美国故转, ♻️ 香港自动, 🌐 全部手动]

pr: &pr {type: select, proxies: [♻️ 新加坡自动, 🔯 日本故转, 🔯 台湾故转, ♻️ 香港自动, ♻️ 日本自动, ♻️ 台湾自动, ♻️ 美国自动, ♻️ 韩国自动, ♻️ 自动选择, 🚀 手动选择, 🎯 全球直连, 拒绝]}
dir: &dir {type: select, proxies: [🎯 全球直连, ♻️ 新加坡自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 台湾自动, ♻️ 美国自动, ♻️ 韩国自动, ♻️ 自动选择, 🚀 手动选择, 拒绝]}


proxy-groups:
  - {name: 🐟 漏网之鱼, type: select, proxies: [♻️ 香港自动, 🎯 全球直连, ♻️ 日本自动, ♻️ 新加坡自动, ♻️ 台湾自动, ♻️ 韩国自动, ♻️ 美国自动, ♻️ 自动选择]}
  - {name: 🚀 手动选择, type: select, proxies: [♻️ 香港自动, ♻️ 日本自动, ♻️ 新加坡自动, ♻️ 台湾自动, ♻️ 韩国自动, ♻️ 美国自动, ♻️ 自动选择]}
  - {name: 💬 即时通讯,  <<: *pr}
  - {name: 🌐 社交媒体,  <<: *pr}
  - {name: 🤖 ChatGPT,  <<: *pr}
  - {name: 🤖 Copilot,  <<: *pr}
  - {name: 🤖 AI服务,  <<: *pr}
  - {name: 🚀 GitHub,  <<: *pr}
  - {name: 🎮 游戏平台,  <<: *dir}
  - {name: 🎮 Steam,  <<: *dir}
  - {name: 📹 YouTube,  <<: *pr}
  - {name: 🍎 苹果服务,  <<: *dir}
  - {name: Ⓜ️ 微软服务,  <<: *dir}
  - {name: 📢 谷歌FCM,  <<: *pr}
  - {name: 🇬 谷歌服务,  <<: *pr}
  - {name: 🎶 TikTok,  <<: *pr}
  - {name: 🎻 Spotify,  <<: *pr}
  - {name: 🌎 国外媒体,  <<: *pr}
  - {name: 🛒 国外电商,  <<: *pr}
  - {name: 🎯 全球直连, type: select, proxies: [直连]}
  - {name: 🔀 非标端口, type: select, proxies: [🐟 漏网之鱼, 🎯 全球直连]}

 
  #- {name: 🔯 香港故转, type: fallback, tolerance: 20, interval: 300, proxies: [🇭🇰 香港手动, ♻️ 香港自动]}
  - {name: 🔯 日本故转, type: fallback, tolerance: 20, interval: 300, proxies: [🇯🇵 日本手动, ♻️ 日本自动]}
  #- {name: 🔯 新加坡故转, type: fallback, tolerance: 20, interval: 300, proxies: [🇸🇬 新加坡手动, ♻️ 新加坡自动]}
  #- {name: 🔯 美国故转, type: fallback, tolerance: 20, interval: 300, proxies: [🇺🇲 美国手动, ♻️ 美国自动]}
  - {name: 🔯 台湾故转, type: fallback, tolerance: 20, interval: 300, proxies: [🇹🇼 台湾手动, ♻️ 台湾自动]}
  #- {name: 🔯 韩国故转, type: fallback, tolerance: 20, interval: 300, proxies: [🇰🇷 韩国手动, ♻️ 韩国自动]}
  - {name: ♻️ 香港自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|深|美)).)*$" }
  - {name: ♻️ 日本自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(?i)(日|🇯🇵|JP|Japan|NRT|HND|KIX|CTS|FUK))(?!.*(尼|排除2|5x)).*$"}
  - {name: ♻️ 新加坡自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(新加坡|坡|狮城|SG|Singapore))^((?!(港|台|韩|日|美)).)*$" }
  - {name: ♻️ 美国自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(美|US|(?i)States|America))^((?!(港|台|日|韩|新)).)*$"}
  - {name: ♻️ 台湾自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(?i)(台|🇼🇸|🇹🇼|TW|tai|TPE|TSA|KHH))(?!.*(排除1|排除2|5x)).*$"}
  - {name: ♻️ 韩国自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(?i)(韩|🇰🇷|韓|首尔|南朝鲜|KR|KOR|Korea|South))(?!.*(排除1|排除2|5x)).*$"}
  - {name: 🇭🇰 香港手动, type: select, include-all: true, filter: "(?i)港|hk|hongkong|hong kong"}
  - {name: 🇯🇵 日本手动, type: select, include-all: true, filter: "(?i)日本|jp|japan"}
  - {name: 🇸🇬 新加坡手动, type: select, include-all: true, filter: "(?i)新加坡|坡|狮城|SG|Singapore"}
  - {name: 🇺🇲 美国手动, type: select, include-all: true, filter: "(?i)美|us|unitedstates|united states"}
  - {name: 🇹🇼 台湾手动, type: select, include-all: true, filter: "(?=.*(?i)(台|🇼🇸|🇹🇼|TW|tai|TPE|TSA|KHH))(?!.*(排除1|排除2|5x)).*$"}  
  - {name: 🇰🇷 韩国手动, type: select, include-all: true, filter: "(?=.*(?i)(韩|🇰🇷|韓|首尔|南朝鲜|KR|KOR|Korea|South))(?!.*(排除1|排除2|5x)).*$"}
  #- {name: 🌐 全部手动, type: select, include-all: true,filter: "^((?!(直连|拒绝)).)*$" }
  - {name: ♻️ 自动选择, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "^((?!(直连|拒绝)).)*$" }
  #- {name: ♻️ 香港智能, type: smart, uselightgbm: false, collectdata: false, include-all: true, interval: 300, filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|深|美)).)*$"}
  #- {name: 香港智能,  <<: *BaseSmart, filter: *FilterHK, include-all: true, policy-priority: '优:2;中:1;备:0.5', icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Hong_Kong.png}

# 规则
rules:
 # 拦截规则
  #- RULE-SET,Tracking,REJECT
  #- RULE-SET,Advertising,REJECT
 # 域名后缀匹配
  - DOMAIN-SUFFIX,mujika.pro,DIRECT
# 域名关键字匹配
  #- DOMAIN-KEYWORD,1e100,
# IP段匹配
  #- IP-CIDR,142.171.133.131/32,no-resolve
# 规则匹配 
  - RULE-SET,private,DIRECT
  - RULE-SET,Custom_Direct_Classical,DIRECT
  - RULE-SET,Custom_Proxy_Classical,🚀 手动选择
  - RULE-SET,google-cn,DIRECT
  - RULE-SET,category-games@cn,DIRECT
  - RULE-SET,Steam_CDN_Classical,DIRECT
  - RULE-SET,category-game-platforms-download,DIRECT
  - RULE-SET,category-public-tracker,DIRECT
  - RULE-SET,category-communication,💬 即时通讯
  - RULE-SET,category-social-media-!cn,🌐 社交媒体
  - RULE-SET,openai,🤖 ChatGPT
  - RULE-SET,bing,🤖 Copilot
  - RULE-SET,category-ai-!cn,🤖 AI服务
  - RULE-SET,github,🚀 GitHub
  - RULE-SET,steam,🎮 Steam
  - RULE-SET,youtube,📹 YouTube
  - RULE-SET,AppleCN,DIRECT
  - RULE-SET,Apple,🍎 苹果服务
  - RULE-SET,microsoft,Ⓜ️ 微软服务
  - RULE-SET,googlefcm,📢 谷歌FCM
  - RULE-SET,google,🇬 谷歌服务
  - RULE-SET,tiktok,🎶 TikTok
  # - GEOSITE,category-emby,🎥 Emby
  - RULE-SET,spotify,🎻 Spotify
  # - RULE-SET,bahamut,📺 Bahamut
  - RULE-SET,category-games,🎮 游戏平台
  - RULE-SET,category-entertainment,🌎 国外媒体
  - RULE-SET,category-ecommerce,🛒 国外电商
  - RULE-SET,gfw,🚀 手动选择
  # - GEOIP,netflix,🎥 Netflix,no-resolve
   
  # IP规则
  - RULE-SET,telegram_ip,💬 即时通讯,no-resolve
  - RULE-SET,twitter_ip,🌐 社交媒体,no-resolve
  - RULE-SET,facebook_ip,🌐 社交媒体,no-resolve
  - RULE-SET,google_ip,🇬 谷歌服务,no-resolve
  - RULE-SET,private_ip,DIRECT,no-resolve
  - RULE-SET,cn,DIRECT
  # 国内 IP 兜底
  - RULE-SET,cn_ip,DIRECT,no-resolve
  - RULE-SET,Custom_Port,DIRECT,🔀 非标端口
 
  # 兜底规则
  - MATCH,🐟 漏网之鱼

  

# 规则集
## type：可选http/file/inline  behavior：可选domain/ipcidr/classical format：可选yaml/text/mrs
#_domain: { <<: *domain, url: ""}
#_class: { <<: *class, url: ""}
#_ip: { <<: *ip, url: ""}

rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical}
  #class: &class {type: http, interval: 86400, behavior: classical, format: text}

rule-providers:
  # 域名规则
  private: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  google-cn: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google-cn.mrs"}
  category-games@cn: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-games@cn.mrs"}
  category-game-platforms-download: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-game-platforms-download.mrs"}
  AppleCN: {<<: *domain, url: https://git.imee.me/https://github.com/666OS/rules/raw/release/mihomo/domain/AppleCN.mrs}
  category-public-tracker: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-public-tracker.mrs"}
  category-communication: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-communication.mrs"}
  category-social-media-!cn: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-social-media-!cn.mrs"}
  openai: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/openai.mrs"}
  bing: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bing.mrs"}
  category-ai-!cn: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ai-!cn.mrs"}
  github: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  steam: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/steam.mrs"}
  youtube: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  Apple: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple.mrs"}
  microsoft: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  googlefcm: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/googlefcm.mrs"}
  google: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  tiktok: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  spotify: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/spotify.mrs"}
  category-games: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-games.mrs"}
  category-entertainment: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-entertainment.mrs"}
  category-ecommerce: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ecommerce.mrs"}
  gfw: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  cn: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  
  # IP规则
  cn_ip: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  telegram_ip: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  twitter_ip: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/twitter.mrs"}
  facebook_ip: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/facebook.mrs"}
  google_ip: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  private_ip: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/private.mrs"}
  

  # 其他规则
  Custom_Direct_Classical: {<<: *class, url: "https://testingcf.jsdelivr.net/gh/Aethersailor/Custom_OpenClash_Rules@main/rule/Custom_Direct_Classical.yaml"}
  Custom_Proxy_Classical: {<<: *class, url: "https://testingcf.jsdelivr.net/gh/Aethersailor/Custom_OpenClash_Rules@main/rule/Custom_Proxy_Classical.yaml"}
  Steam_CDN_Classical: {<<: *class, url: "https://testingcf.jsdelivr.net/gh/Aethersailor/Custom_OpenClash_Rules@main/rule/Steam_CDN_Classical.yaml"}
  Custom_Port: {<<: *class, url: "https://testingcf.jsdelivr.net/gh/Aethersailor/Custom_OpenClash_Rules@main/rule/Custom_Port_Direct.yaml"}
  



# 全局配置 
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894

allow-lan: true
bind-address: "*"
ipv6: true
unified-delay: true
tcp-concurrent: true
log-level: warning
find-process-mode: 'off'
# interface-name: en0
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15
disable-keep-alive: false

# 认证配置
authentication:
- xmhYs4Ebrmeg:rwLP29S56fJN
skip-auth-prefixes:
  - 192.168.1.0/24
  - 192.168.31.0/24
  - 192.168.100.0/24
  - 127.0.0.1/8

# 配置存储
profile:
  store-selected: true
  store-fake-ip: true

# 控制面板，external-ui 路径如果出现报错，根据你使用的插件进行调整，比如openclash改为： /etc/openclash/run  ，裸核跑改为/etc/mihomo/run
# 因容易造成新手面板启动问题，我注释掉了，需要的自行开启
#external-controller: 0.0.0.0:9090
#secret: ""
#external-ui: "/etc/nikki/run"
#external-ui-name: zashboard
#external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"

# 嗅探
sniffer:
  enable: true
  override-destination: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "+.baidu.com"
    - "+.apple.com"
    - Mijia Cloud
    - dlg.io.mi.com
    - "+.oray.com"
    - "+.sunlogin.net"
    - "+.push.apple.com"
  #parse-pure-ip: true
  #force-dns-mapping: true


# 入站  
tun:
  enable: true
  # system/gvisor/mixed
  stack: mixed
  dns-hijack: ["any:53", "tcp://any:53"]
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true
  #endpoint-independent-nat: true
  #strict-route: false



# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:7874
  ipv6: true
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:private,cn"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "time.*.com"
  default-nameserver:
    - 223.5.5.5
  proxy-server-nameserver:
    - https://223.5.5.5/dns-query
  # namesever尽量用运营商提供的DNS
  nameserver:
    - 223.5.5.5
    - 119.29.29.29
    - 221.131.143.69
    - 112.4.0.55

geodata-mode: true
geodata-loader: standard
geox-url:
  mmdb: https://testingcf.jsdelivr.net/gh/alecthw/mmdb_china_ip_list@release/lite/Country.mmdb
  geoip: https://testingcf.jsdelivr.net/gh/Loyalsoldier/v2ray-rules-dat@release/geoip.dat
  geosite: https://testingcf.jsdelivr.net/gh/Loyalsoldier/v2ray-rules-dat@release/geosite.dat
  asn: https://testingcf.jsdelivr.net/gh/xishang0128/geoip@release/GeoLite2-ASN.mmdb

